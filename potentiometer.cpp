//-----------------------------------------------------------------------------
#include <avr/pgmspace.h>
#include "potentiometer.h"
//-----------------------------------------------------------------------------
#define HYSTERESIS_WIDTH    4
//-----------------------------------------------------------------------------
const PROGMEM BYTE sin_p_table[721] = {};
const PROGMEM BYTE sin_n_table[721] = {};
const PROGMEM BYTE cos_p_table[721] = { 255, 255, 254, 254, 253, 253, 253, 252, 252, 251, 251, 250, 249, 249, 248, 248, 247, 246, 246, 245, 244, 243, 243, 242, 241, 240, 239, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 221, 220, 219, 218, 217, 215, 214, 213, 212, 210, 209, 208, 206, 205, 204, 202, 201, 199, 198, 197, 195, 194, 192, 191, 189, 187, 186, 184, 183, 181, 180, 178, 176, 175, 173, 171, 170, 168, 166, 164, 163, 161, 159, 157, 156, 154, 152, 150, 148, 147, 145, 143, 141, 139, 137, 135, 133, 131, 129, 127, 125, 124, 122, 120, 118, 116, 113, 111, 109, 107, 105, 103, 101, 99, 97, 95, 93, 91, 89, 87, 84, 82, 80, 78, 76, 74, 72, 69, 67, 65, 63, 61, 58, 56, 54, 52, 50, 47, 45, 43, 41, 39, 36, 34, 32, 30, 27, 25, 23, 21, 18, 16, 14, 12, 9, 7, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 7, 9, 12, 14, 16, 18, 21, 23, 25, 27, 30, 32, 34, 36, 39, 41, 43, 45, 47, 50, 52, 54, 56, 58, 61, 63, 65, 67, 69, 72, 74, 76, 78, 80, 82, 84, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 116, 118, 120, 122, 124, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 148, 150, 152, 154, 156, 157, 159, 161, 163, 164, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 184, 186, 187, 189, 191, 192, 194, 195, 197, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 239, 240, 241, 242, 243, 243, 244, 245, 246, 246, 247, 248, 248, 249, 249, 250, 251, 251, 252, 252, 253, 253, 253, 254, 254, 255, 255 };
const PROGMEM BYTE cos_n_table[721] = {};
//-----------------------------------------------------------------------------
void set_position(WORD angle)
{
    static WORD prev_angle = 0;
    static char boost = 0;
    BYTE tmp;

    if(angle > prev_angle)
    {
        boost = HYSTERESIS_WIDTH;
    }
    if(angle < prev_angle)
    {
        boost = - HYSTERESIS_WIDTH;
    }
    prev_angle = angle;

    angle += boost;

    // SIN_P
    tmp = pgm_read_byte(sin_p_table + angle);
    if(tmp)
    {
        set_bit(SIN_TCCR, SIN_P_COM);
        SIN_P_OCR = tmp;
    }
    else
    {
        clr_bit(SIN_TCCR, SIN_P_COM);
    }

    tmp = pgm_read_byte(sin_n_table + angle);
    if(tmp)
    {
        set_bit(SIN_TCCR, SIN_N_COM);
        SIN_N_OCR = tmp;
    }
    else
    {
        clr_bit(SIN_TCCR, SIN_N_COM);
    }

    // COS_P
    tmp = pgm_read_byte(cos_p_table + angle);
    if(tmp)
    {
        set_bit(COS_TCCR, COS_P_COM);
        COS_P_OCR = tmp;
    }
    else
    {
        clr_bit(COS_TCCR, COS_P_COM);
    }

    // COS_N
    tmp = pgm_read_byte(cos_n_table + angle);
    if(tmp)
    {
        set_bit(COS_TCCR, COS_N_COM);
        COS_N_OCR = tmp;
    }
    else
    {
        clr_bit(COS_TCCR, COS_N_COM);
    }
}
//-----------------------------------------------------------------------------
